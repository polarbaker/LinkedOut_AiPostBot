/**
 * Enhanced LinkedIn Post Generator
 * app.min.js - Minimal version to ensure tab navigation works
 */

// Global variables
let currentTab = 'voice-analysis';
let currentArticle = null;
let userStyleProfile = null;

// Initialize DOM elements
document.addEventListener('DOMContentLoaded', function() {
  console.log('Enhanced LinkedIn Post Generator initializing...');
  
  // Set up tab navigation
  const tabButtons = document.querySelectorAll('.nav-tab');
  tabButtons.forEach(button => {
    button.addEventListener('click', function() {
      const tabId = this.getAttribute('data-tab');
      switchTab(tabId);
    });
  });
  
  // Set up theme toggle
  const themeToggle = document.getElementById('themeToggle');
  if (themeToggle) {
    themeToggle.addEventListener('click', toggleTheme);
  }
  
  // Initialize with saved theme if any
  const savedTheme = localStorage.getItem('theme') || 'light';
  document.documentElement.setAttribute('data-theme', savedTheme);
  updateThemeIcon(savedTheme);
  
  console.log('Tab navigation initialized successfully');
});

/**
 * Switch between tabs
 * @param {string} tabId - The ID of the tab to switch to
 */
function switchTab(tabId) {
  console.log('Switching to tab:', tabId);
  
  // Update navigation
  const tabButtons = document.querySelectorAll('.nav-tab');
  tabButtons.forEach(btn => btn.classList.remove('active'));
  
  const activeTabButton = document.querySelector(`[data-tab="${tabId}"]`);
  if (activeTabButton) {
    activeTabButton.classList.add('active');
  } else {
    console.error('Tab button not found:', tabId);
  }

  // Update content
  const tabContents = document.querySelectorAll('.tab-content');
  tabContents.forEach(content => content.classList.remove('active'));
  
  const activeContent = document.getElementById(tabId);
  if (activeContent) {
    activeContent.classList.add('active');
  } else {
    console.error('Tab content not found:', tabId);
  }
  
  // Update current tab
  currentTab = tabId;
}

/**
 * Toggle between light and dark theme
 */
function toggleTheme() {
  const currentTheme = document.documentElement.getAttribute('data-theme');
  const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
  
  // Update the theme
  document.documentElement.setAttribute('data-theme', newTheme);
  localStorage.setItem('theme', newTheme);
  
  // Update the icon
  updateThemeIcon(newTheme);
}

/**
 * Update the theme icon based on the current theme
 * @param {string} theme - The current theme ('light' or 'dark')
 */
function updateThemeIcon(theme) {
  const icon = document.getElementById('themeIcon');
  if (!icon) return;
  
  if (theme === 'dark') {
    icon.textContent = '‚òÄÔ∏è';
    icon.setAttribute('title', 'Switch to Light Mode');
  } else {
    icon.textContent = 'üåô';
    icon.setAttribute('title', 'Switch to Dark Mode');
  }
}
